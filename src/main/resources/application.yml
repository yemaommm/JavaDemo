server:
  port : 8081


spring:
  profiles:
    active: dev
  datasource:
    # 数据库访问配置
    # 主数据源，默认的
    url : jdbc:mysql://106.14.77.144:3306/shop
    username : root
    password : root123
    driver-class-name : com.mysql.jdbc.Driver
    type : com.zaxxer.hikari.HikariDataSource

    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle : true
    testOnBorrow : false
    testOnReturn : false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements : true
    maxPoolPreparedStatementPerConnectionSize : 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters : stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties : druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat : true
  redis:
    database: 0
    # server host1
    host: 127.0.0.1
    # server password
    #password:123
    #connection port
    port: 6379
  # pool settings ...
  pool:
    max-idle: 8
    min-idle: 0
    max-active: 8
    max-wait: -1
    # name of Redis server
#  sentinel:
#    master:123
    # comma-separated list of host:portpairs
#    nodes:123

#    hikari:
#      maxLifetime: 1765000   #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上
#      maximumPoolSize: 15    #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)

mybatis:
  mapperLocations: classpath:mapper/*.xml

#spring:
#  profiles : dev
#  datasource:
#    url : jdbc:mysql://106.14.78.156:3306/shop

# 分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

logging:
  level:
    root: INFO
    com:
      example:
        demo:
          mapper: DEBUG
          dao: DEBUG

test:
  admin:
    id: 1
    name: name
    descritpion: descritpion
    url: url
    pid: 22
  admin2:
    id: 2
    name: name
    descritpion: descritpion
    url: url
    pid: 22